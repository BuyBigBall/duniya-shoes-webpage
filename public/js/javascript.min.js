$(document).ready(function () {
    $('input').prop('checked', false);
    //$.fn.snow({maxSize: 30,newOn: 800});
});
processDesignIdea = {
    defaults: {
        menuObject: {},
        designObject: {},
        sign: "",
        categoActive: [],
        styleActive: [],
        colorGrpActive: [],
        optionSele: "",
        linkMain: "/",
        path: "/",
        linkProject: "/designershoes/",
        link: "Designidea/json/json",
        mainList: ".list-sty",
        request: false,
        itemSize: 20, /*item limit load*/
        itemPage: 0, /*page load*/
        page: 1,
        pageSize: "", /*all page*/
        pageItemSize: 5,
        scrollStatus: false,
        moreStatus: true,
        countItem: 0

    },
    config: function (data) {
        this.defaults = $.extend(this.defaults, data);
        this.event.config();
        this.createList();

        this.setValue.checkBox();
        this.setValue.optionMenu();
    },
    event: {
        config: function () {
            this.checkbox('input');
            this.menuOption('.menuOption [data-option]');
            this.clear('.btnClear');
            this.iconMenu('.icon-menu');
            this.navPage('.container-toolbar .nav-page li');
            this.chooseDesign('.list-sty li');
            this.scroll();
            //            this.touch();
            this.windowResize();
            this.tabMore();
        },
        checkbox: function (ele) {
            var self = processDesignIdea;
            var defaults = self.defaults;
            $(ele).click(function () {
                self.setValue.call();
            });
        },
        menuOption: function (ele) {
            var self = processDesignIdea;
            var defaults = self.defaults;
            $(ele).click(function () {
                var _this = $(this);
                var dataOption = _this.attr('data-option');
                defaults.optionSele = dataOption;
                self.setValue.call();

                $('.sele').removeClass('sele');
                $(this).addClass('sele');
            });
        },
        clear: function (ele) {
            var self = processDesignIdea;
            var defaults = self.defaults;
            $(ele).click(function () {
                $('input').prop('checked', false);
                defaults.optionSele = "";
                self.setValue.call();
            });
        },
        scroll: function () {
            var self = processDesignIdea;
            $(window).scroll(function () {
                self.chkScroll();
            });
        },
        touch: function () {
            var self = processDesignIdea;
            $("body").EventTouchMobile(function (e) {
                switch (e) {
                    case "left":
                        if ($('.icon-menu'.hasClass("active"))) {
                            $('.icon-menu').click();
                        }
                        break;
                    case "right":
                        if (!$('.icon-menu'.hasClass("active"))) {
                            $('.icon-menu').click();
                        }
                        break;
                    case "up":
                        break;
                    case "down":
                        self.chkScroll();
                        break;
                    default:
                        break;
                }
            });

        },
        navPage: function (ele) {
            var self = processDesignIdea;
            $(document).delegate(ele, 'click', function () {
                var _this = $(this);
                var index = _this.attr("data-page");
                self.defaults.page = index;
                self.defaults.itemPage = 0;
                self.setValue.navPage();
                self.getJson();
            });
        },
        iconMenu: function (ele) {
            var _class = "active";
            var main = $('.menuMain');
            var container = $('.container,.header');
            $(ele).click(function (e) {
                var _this = $(this);
                if (_this.hasClass(_class)) {
                    _this.removeClass(_class);
                    main.Animation({ transition: .2, translateX: "-100%" });
                    container.Animation({ transition: .2, translateX: "0" });
                    $('.layout-block-click').remove();
                } else {
                    _this.addClass(_class);
                    main.Animation({ transition: .2, translateX: "0" });
                    container.Animation({ transition: .2, translateX: "300px" });
                    var del = $("<div>").addClass('layout-block-click');
                    del.appendTo('body');
                    $(".list-sty li a").off("click");
                }
            });
            $(document).click(function (e) {
                var _this = e.target;
                var main = $(_this).parents('.menuMain');
                var length = main.length;
                var status = $('.icon-menu').hasClass('active');
                if (length < 1 && status) {
                    $('.icon-menu').click();
                }
            });
            /*Event on mobile*/
            $(document).on("touchstart", ".layout-block-click", function (e) {
                e.preventDefault();
                var _this = e.target;
                var main = $(_this).parents('.menuMain');
                var length = main.length;
                var status = $('.icon-menu').hasClass('active');
                if (length < 1 && status) {
                    $('.icon-menu').click();
                }
            });
        },
        windowResize: function () {
            var self = processDesignIdea;
            self.setMenuHeight();
            $(window).resize(function () {
                self.setMenuHeight();
                self.setListHeigth();
            });
        },
        chooseDesign: function (ele) {
            var self = processDesignIdea;
            $(document).delegate(ele, 'click', function () {
                var _this = $(this);
                var info = _this.attr('data-info').split(',');
                window.open(info.pop(), '_blank');
                self.updateChoose(info);
            });
        },
        tabMore: function () {
            var self = processDesignIdea;
            $('.tab-more').click(function () {
                self.tabMore(true, true);
                self.getJson();
            });
        }
    },
    chkScroll: function () {
        var self = this;
        var defaults = self.defaults;
        var _this = $(window);
        var scollTop = _this.scrollTop();
        var winHeight = _this.height();
        var docHeight = $(document).height();
        var status = defaults.scrollStatus;
        var loadCount = parseInt(defaults.countItem / defaults.itemSize);
        if (scollTop >= ((docHeight - winHeight) - 200)/* - ((docHeight - winHeight) / 4)) && !status*/) {
            if (defaults.itemPage == 0) {
                defaults.itemPage = 2;

            }
            defaults.scrollStatus = true;
            if (_this.width() <= 1024) {
                this.tabMore(true);
            } else {
                if (!status)
                    self.getJson();
            }
        } else {
            if (!this.defaults.moreStatus) {
                this.tabMore(false);
            }
            if (scollTop < ((docHeight - winHeight) - 200)/* - ((docHeight - winHeight) / 4)) && !status*/) {
                this.tabMore(false);
            }
        }
    },
    setValue: {
        call: function () {
            var self = processDesignIdea;
            self.defaults.moreStatus = true;
            this.optionMenu();
            self.getInput();
        },
        optionMenu: function () {
            var self = processDesignIdea;
            var defaults = self.defaults.menuObject;
            var main = $('.menuOption nav');
            var option = defaults.optionSele;
            var _class = "active";
            var tagOption = "", index = "";
            
            /*-----------------------------------------------
             * set menu bg active
             *-----------------------------------------------*/
            main.find('.' + _class).removeClass(_class);
            if (option) {
                tagOption = main.find('[data-option="' + defaults.optionSele + '"]');
                tagOption.addClass(_class);
                index = tagOption.index();
            }

            /*-----------------------------------------------
             * set toggle show menu option description tab
             *-----------------------------------------------*/
            var main = $('.menuOption-description');
            main.find('.' + _class).removeClass(_class);
            if (option.length > 0) {
                main.find('li').eq(index).addClass(_class);
            }
        },
        checkBox: function () {
            var self = processDesignIdea;
            var defaults = self.defaults.menuObject;

            $('input[type="checkbox"]').each(function () {
                var _this = $(this);
                var _name = _this.attr('name');
                var _val = _this.val();
                var arr = [];

                switch (_name) {
                    case "category":
                            arr = defaults.category;
                        break;
                    case "style":
                                arr = defaults.style;
                        break;
                    case "colorGrp":
                                arr = defaults.colorGrp;
                        break;
                }
                if (arr.indexOf(_val) > -1) {
                    _this.prop("checked", true);
                }
            });
        },
        navPage: function () {
            var self = processDesignIdea;
            var page = processDesignIdea.defaults.page;
            var mainNav = $('.container-toolbar .nav-page');
            var _class = "active";
            mainNav.find('.' + _class).removeClass(_class);
            mainNav.find('li[data-page="' + page + '"]').addClass(_class);
        }
    },
    getInput: function () {
        var self = this;
        var defaults = this.defaults;

        defaults.categoActive = [];
        defaults.styleActive = [];
        defaults.colorGrpActive = [];
        defaults.itemPage = 0;
        defaults.scrollStatus = false;
        defaults.page = 1;

        $('input').each(function () {
            var _this = $(this);
            var name = _this.attr('name');
            var val = _this.val();
            var status = _this.is(':checked');
            if (status) {
                switch (name) {
                    case "category":
                        defaults.categoActive.push(val);
                        break;
                    case "style":
                        defaults.styleActive.push(val);
                        break;
                    case "colorGrp":
                        defaults.colorGrpActive.push(val);
                        break;
                }
            }
        });
        self.getJson();
    },
    getJson: function () {
        var self = this;
        var defaults = this.defaults;
        var data = {
            category: defaults.categoActive,
            style: defaults.styleActive,
            colorGrp: defaults.colorGrpActive,
            optionSele: defaults.optionSele,
            page: defaults.page,
            pageItemSize: defaults.pageItemSize,
            itemPage: defaults.itemPage,
            itemSize: defaults.itemSize
        };
        if (defaults.request) {
            defaults.request.abort();
        }
        //
        var search = function (name, url) {
            url = url || window.location.search;

            if (!name) {
                return url;
            }

            name = name.replace(/[\[\]]/g, "\\$&");

            var regex, results;

            regex = new window.RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)");
            results = regex.exec(url);

            if (!results) {
                return null;
            }

            if (!results[2]) {
                return "";
            }

            return window.decodeURIComponent(results[2].replace(/\+/g, " "));
        };

        if (search("cat")) {
            data.category = search("cat");
        }
        if (search("sty")) {
            data.style = search("sty");
        }
        if (search("color")) {
            data.colorGrp = search("color");
        }
        if (search("option")) {
            data.category = search("option");
        }
        //
        var new_url = "";
        if (data.category != "") {
            new_url += ((new_url.length === 0 ? "?" : "&") + "cat=" + data.category);
        }
        if (data.style != "") {
            new_url += ((new_url.length === 0 ? "?" : "&") + "sty=" + data.style);
        }
        if (data.colorGrp != "") {
            new_url += ((new_url.length === 0 ? "?" : "&") + "color=" + data.colorGrp);
        }
        if (data.optionSele != "") {
            new_url += ((new_url.length === 0 ? "?" : "&") + "option=" + data.optionSele);
        }
        if (typeof data.style === "string") {
            data.style = [data.style];
        }

        //data["_token"] = $('input[name=_token]').val();
        //console.log(data);return;
       
        // window.history.pushState(null, null, 'designidea' + new_url);
        defaults.request = $.ajax({
            type: 'POST',
            headers: {
                'X-CSRF-TOKEN': $('input[name=_token]').val()
              },
            data: { data: data,
                    _token: $('input[name=_token]').val()
                     },
            url: defaults.linkProject + defaults.link,
            success: function (data) {
                if (data !== undefined && data !== "false") {
                    var dataJson = $.parseJSON(data);
                    if (defaults.scrollStatus) {
                        var arrLength = self.getLength(defaults.designObject);
                        $.each(dataJson['ITEM'], function (i, item) {
                            defaults.designObject[++arrLength] = item;
                        });
                        defaults.scrollStatus = false;
                        defaults.itemPage += 1;
                    } else {
                        defaults.designObject = dataJson['ITEM'];
                    }

                    defaults.pageSize = dataJson['PAGE_SIZE'];
                    defaults.countItem = dataJson['COUNT'];

                    self.createList();
                    self.createPageNav();
                } else {
                    self.defaults.moreStatus = false;
                }
                self.tabMore(false);
            }
        });
    },
    createList: function () {
        var self = this;
        var defaults = self.defaults;
        var data = defaults.designObject;
        var main = $(defaults.mainList);
        var sign = defaults.sign;
        var domain = defaults.linkMain;
        var path = defaults.path;

        if (!data) {
            return false;
        }

        main.empty();

        for (var i in data) {
            var arr = data[i];
            var no = arr['NO'];
            if (arr['MAIN_CATEGORY']) {
                var id = arr['ID'];
                var category = self.getCategoryDetail(arr['MAIN_CATEGORY'])['NAME'];
                var style = arr['MODELSTYLE'];
                var price = arr['PRICE'];
                var sale = arr['SALE'];
                var sale_status = arr['SALE_STATUS'];
                var serles = arr['SERIES'] ? "&series=" + arr['SERIES'] : "";
                var news = arr['NEW_TAG'];
                var url = path + "designershoes/index?model=" + no + serles;

                if (no.indexOf("DB") === 0) {
                    url = path + "designerbelt/index?model=" + no + serles;
                }

                var urlImg = domain + "images/models/ishoes/designershoes/modelstyles/" + no + ".jpg";

                if (serles) {
                    var urlImg = domain + "images/models/ishoes/designershoes/modelStyles/" + no + "-" + arr['SERIES'] + ".jpg";
                }
                var info = [id, no, (arr['SERIES'] ? arr['SERIES'] : ""), url];
                var li = "<li data-info='" + info.toString() + "'>";
                //                li += "<a href='"+url+"' target='_blank'>";
                li += "<figure>";
                li += "<div class='image'>";
                li += "<img src='" + urlImg + "'/>";
                li += "<div class='btn-choose'>";
                li += "CHOOSE DESIGN";
                li += "</div>";
                li += "</div>";
                li += "<figcaption>";
                li += "<div>" + category.toLowerCase() + " " + style + "</div>";
                if (sale_status == "Y") {
                    li += "<div class='price line-sale'>" + sign + " " + price + "</div>";
                    li += "<div class='price-sele'><span>SALE</span><span class='price'> " + sign + " " + sale + "</span></div>";
                } else {
                    li += "<div class='price'>" + sign + " " + price + "</div>";
                    li += "<div class='price-sele'><span>&nbsp;</span><span class='price'></span></div>";
                }

                li += " </figcaption>";
                li += "</figure>";
                //                li += "</a>";

                if (sale_status == "Y") {
                    li += "<aside class='promotion-sale'>";
                    li += "<div>NOW</div>";
                    li += "<div> " + sign + " " + sale + "</div>";
                    li += "</aside>";
                }
                if (news == "Y") {
                    li += "<aside class='promotion-new'>";
                    li += "<div>NEW</div>";
                    li += "</aside>";
                }
                li += "<div class='circleG-box'>";
                li += "<div class='circleG circleG_1'></div>";
                li += "<div class='circleG circleG_2'></div>";
                li += "<div class='circleG circleG_3'></div>";
                li += "</div>";
                li += "</li>";
                $(li).appendTo(main);

                $('.list-sty li:not(.loaded) img').one("load", function () {
                    var _this = $(this);
                    var main = _this.parents('li');
                    var button = main.find('.btn-choose');
                    var proload = main.find('.circleG-box');
                    main.addClass('loaded')
                    proload.hide();
                }).each(function () {
                    if (this.complete)
                        $(this).load();
                });
            }
        }
        self.setListHeigth();
    },
    createPageNav: function () {
        var self = this;
        var mainNav = $('.container-toolbar .nav-page').empty();
        var pageSize = self.defaults.pageSize;
        if (pageSize > 1) {
            for (var i = 0; i < pageSize; i++) {
                var li = $("<li>").attr({ 'data-page': (i + 1) }).html(i + 1);
                li.appendTo(mainNav);
            }
        }
        self.setValue.navPage();
    },
    getLength: function (arr) {
        var count = 0;
        for (var i in arr) {
            count++;
        }
        return count;
    },
    getCategoryDetail: function (key) {
        var object = this.defaults.menuObject.category;
        if (key) {
            for (var i in object) {
                var arr = object[i];
                if (arr['ID'] == key) {
                    return arr;
                }
            }
        }
    },
    setMenuHeight: function () {
        var main = $('.menuMain');
        var mainBox = $('.menuMain-box');
        var container = $('.container,.header');
        var width = $(window).width();
        var height = $(window).height();
        if (width <= 1080) {
            main.css({ height: '100%' });
            mainBox.css({ height: (height) - $('.menuMain-box').position().top });
            main.Animation({ translateX: "-100%" });
        } else {
            main.css({ height: 'auto' });
            mainBox.css({ height: 'auto' });
            main.Animation({ transition: 0, translateX: "0" });
        }
        container.Animation({ transition: 0, translateX: "0" });
        $('.icon-menu').removeClass('active');
        $('.layout-block-click').remove();
    },
    setListHeigth: function () {
        var main = $('.list-sty li img');
        var width = main.width();
        var height = width - (width / 4);
        main.css({ 'height': height });
    },
    updateChoose: function (data) {
        var url = "designidea/ele/update-choose";
        $.post(url, { id: data[0], no: data[1], series: data[2] });
    },
    tabMore: function (status, event) {
        var ele = $('.tab-more');
        if (status && this.defaults.moreStatus) {
            ele.addClass('active');
        } else {
            ele.removeClass('active');
        }

        ele.html("More Style");
        if (event) {
            ele.html("Loading..");
        }

    }
};